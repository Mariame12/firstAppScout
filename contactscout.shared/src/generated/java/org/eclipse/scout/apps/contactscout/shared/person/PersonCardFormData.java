package org.eclipse.scout.apps.contactscout.shared.person;

import org.eclipse.scout.apps.contactscout.shared.common.AbstractAddressBoxData;
import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

import javax.annotation.Generated;
import java.util.Date;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@Generated(value = "org.eclipse.scout.apps.contactscout.client.person.PersonCardForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class PersonCardFormData extends AbstractFormData {
	private static final long serialVersionUID = 1L;

	public AddressBox getAddressBox() {
		return getFieldByClass(AddressBox.class);
	}

	public ChieldTable getChieldTable() {
		return getFieldByClass(ChieldTable.class);
	}

	public DateOfBirth getDateOfBirth() {
		return getFieldByClass(DateOfBirth.class);
	}

	public Email getEmail() {
		return getFieldByClass(Email.class);
	}

	public EmailWork getEmailWork() {
		return getFieldByClass(EmailWork.class);
	}

	public FirstName getFirstName() {
		return getFieldByClass(FirstName.class);
	}

	public GenderGroup getGenderGroup() {
		return getFieldByClass(GenderGroup.class);
	}

	public LastName getLastName() {
		return getFieldByClass(LastName.class);
	}

	public Mobile getMobile() {
		return getFieldByClass(Mobile.class);
	}

	public Organisation getOrganisation() {
		return getFieldByClass(Organisation.class);
	}

	/**
	 * access method for property PersonId.
	 */
	public String getPersonId() {
		return getPersonIdProperty().getValue();
	}

	/**
	 * access method for property PersonId.
	 */
	public void setPersonId(String personId) {
		getPersonIdProperty().setValue(personId);
	}

	public PersonIdProperty getPersonIdProperty() {
		return getPropertyByClass(PersonIdProperty.class);
	}

	public Phone getPhone() {
		return getFieldByClass(Phone.class);
	}

	public PhoneWork getPhoneWork() {
		return getFieldByClass(PhoneWork.class);
	}

	public Position getPosition() {
		return getFieldByClass(Position.class);
	}

	/**
	 * access method for property RelationType.
	 */
	public String getRelationType() {
		return getRelationTypeProperty().getValue();
	}

	/**
	 * access method for property RelationType.
	 */
	public void setRelationType(String relationType) {
		getRelationTypeProperty().setValue(relationType);
	}

	public RelationTypeProperty getRelationTypeProperty() {
		return getPropertyByClass(RelationTypeProperty.class);
	}

	/**
	 * access method for property WorkId.
	 */
	public String getWorkId() {
		return getWorkIdProperty().getValue();
	}

	/**
	 * access method for property WorkId.
	 */
	public void setWorkId(String workId) {
		getWorkIdProperty().setValue(workId);
	}

	public WorkIdProperty getWorkIdProperty() {
		return getPropertyByClass(WorkIdProperty.class);
	}

	public static class AddressBox extends AbstractAddressBoxData {
		private static final long serialVersionUID = 1L;
	}

	public static class ChieldTable extends AbstractTableFieldBeanData {
		private static final long serialVersionUID = 1L;

		@Override
		public ChieldTableRowData addRow() {
			return (ChieldTableRowData) super.addRow();
		}

		@Override
		public ChieldTableRowData addRow(int rowState) {
			return (ChieldTableRowData) super.addRow(rowState);
		}

		@Override
		public ChieldTableRowData createRow() {
			return new ChieldTableRowData();
		}

		@Override
		public Class<? extends AbstractTableRowData> getRowType() {
			return ChieldTableRowData.class;
		}

		@Override
		public ChieldTableRowData[] getRows() {
			return (ChieldTableRowData[]) super.getRows();
		}

		@Override
		public ChieldTableRowData rowAt(int index) {
			return (ChieldTableRowData) super.rowAt(index);
		}

		public void setRows(ChieldTableRowData[] rows) {
			super.setRows(rows);
		}

		public static class ChieldTableRowData extends AbstractTableRowData {
			private static final long serialVersionUID = 1L;
			public static final String firstName = "firstName";
			public static final String lastName = "lastName";
			public static final String dateOfBirth = "dateOfBirth";
			public static final String genderGroup = "genderGroup";
			public static final String phone = "phone";
			private String m_firstName;
			private String m_lastName;
			private String m_dateOfBirth;
			private String m_genderGroup;
			private String m_phone;

			public String getFirstName() {
				return m_firstName;
			}

			public void setFirstName(String newFirstName) {
				m_firstName = newFirstName;
			}

			public String getLastName() {
				return m_lastName;
			}

			public void setLastName(String newLastName) {
				m_lastName = newLastName;
			}

			public String getDateOfBirth() {
				return m_dateOfBirth;
			}

			public void setDateOfBirth(String newDateOfBirth) {
				m_dateOfBirth = newDateOfBirth;
			}

			public String getGenderGroup() {
				return m_genderGroup;
			}

			public void setGenderGroup(String newGenderGroup) {
				m_genderGroup = newGenderGroup;
			}

			public String getPhone() {
				return m_phone;
			}

			public void setPhone(String newPhone) {
				m_phone = newPhone;
			}
		}
	}

	public static class DateOfBirth extends AbstractValueFieldData<Date> {
		private static final long serialVersionUID = 1L;
	}

	public static class Email extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class EmailWork extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class FirstName extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class GenderGroup extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class LastName extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class Mobile extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class Organisation extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class PersonIdProperty extends AbstractPropertyData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class Phone extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class PhoneWork extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class Position extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class RelationTypeProperty extends AbstractPropertyData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class WorkIdProperty extends AbstractPropertyData<String> {
		private static final long serialVersionUID = 1L;
	}
}
