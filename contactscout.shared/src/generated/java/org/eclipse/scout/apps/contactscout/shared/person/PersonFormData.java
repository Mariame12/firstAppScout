package org.eclipse.scout.apps.contactscout.shared.person;

import org.eclipse.scout.apps.contactscout.shared.common.AbstractAddressBoxData;
import org.eclipse.scout.apps.contactscout.shared.common.AbstractNotesBoxData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

import javax.annotation.Generated;
import java.util.Date;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@Generated(value = "org.eclipse.scout.apps.contactscout.client.person.PersonForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class PersonFormData extends AbstractFormData {
	private static final long serialVersionUID = 1L;

	public AddressBox getAddressBox() {
		return getFieldByClass(AddressBox.class);
	}

	public DateOfBirth getDateOfBirth() {
		return getFieldByClass(DateOfBirth.class);
	}

	public Email getEmail() {
		return getFieldByClass(Email.class);
	}

	public FirstName getFirstName() {
		return getFieldByClass(FirstName.class);
	}

	public GenderGroup getGenderGroup() {
		return getFieldByClass(GenderGroup.class);
	}

	public LastName getLastName() {
		return getFieldByClass(LastName.class);
	}

	public Mobile getMobile() {
		return getFieldByClass(Mobile.class);
	}

	public NotesBox getNotesBox() {
		return getFieldByClass(NotesBox.class);
	}

	public ParentId getParentId() {
		return getFieldByClass(ParentId.class);
	}

	/**
	 * access method for property PersonId.
	 */
	public String getPersonId() {
		return getPersonIdProperty().getValue();
	}

	/**
	 * access method for property PersonId.
	 */
	public void setPersonId(String personId) {
		getPersonIdProperty().setValue(personId);
	}

	public PersonIdProperty getPersonIdProperty() {
		return getPropertyByClass(PersonIdProperty.class);
	}

	public Phone getPhone() {
		return getFieldByClass(Phone.class);
	}

	public RelationType getRelationType() {
		return getFieldByClass(RelationType.class);
	}

	public static class AddressBox extends AbstractAddressBoxData {
		private static final long serialVersionUID = 1L;
	}

	public static class DateOfBirth extends AbstractValueFieldData<Date> {
		private static final long serialVersionUID = 1L;
	}

	public static class Email extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class FirstName extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class GenderGroup extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class LastName extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class Mobile extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class NotesBox extends AbstractNotesBoxData {
		private static final long serialVersionUID = 1L;
	}

	public static class ParentId extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class PersonIdProperty extends AbstractPropertyData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class Phone extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class RelationType extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}
}
